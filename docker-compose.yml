version: '3.8'

services:
    swebapp:
        container_name: c_webui
        image:  fatih27/mailvalidationui #test
        build:
            context: .
            dockerfile: Huawei.WebUIMailValidate/Dockerfile
            no_cache: true
            pull: true
        ports:
            - 8090:8090
        depends_on:
            - spostgresql
            - struemail
            - srabbitmq
    sworker:
        container_name: c_workerservice
        image:  fatih27/validationworkerservice
        build:
            context: .
            dockerfile: Huawei.FileCreateWorkerService/Dockerfile
        depends_on:
            srabbitmq:
                condition: service_healthy           
            spostgresql:
                condition: service_healthy
            struemail:
                condition: service_healthy
    srabbitmq: 
        image: rabbitmq:3.11.15-management
        container_name: c_rabbitmq
        restart: always
        ports:
            - 5672:5672
            - 15672:15672
        environment:
             RABBITMQ_DEFAULT_USER: root
             RABBITMQ_DEFAULT_PASS: root
             TZ: Europe/Istanbul
        volumes:
            - rabbitmq:/var/lib/rabbitmq/
        healthcheck:
            test: ["CMD-SHELL", "rabbitmq-diagnostics check_running 2>&1 | grep running || exit 1"]
            interval: 15s
            timeout: 15s
            retries: 3
            start_period: 20s
    struemail:
        container_name: c_truemail
        image: truemail/truemail-rack:v0.8.0 # for latest version you can use just truemail/truemail-rack:latest
        ports:
            - 9292:9292
        environment:
            VERIFIER_EMAIL: test@extrakolay.com
            ACCESS_TOKENS: your_token
            TZ: Europe/Istanbul
        tty: true
        healthcheck:
            test: ["CMD", "curl", "-i", "http://host.docker.internal:9292/healthcheck"]
            interval: 10s
            timeout: 10s
            retries: 3
            start_period: 15s
        restart: on-failure
    spostgresql:
        container_name: c_postgres
        image: postgres
        restart: always
        environment:
            POSTGRES_DB: MailValidation
            POSTGRES_PASSWORD: Huawei@123!!
            POSTGRES_USER:  root
            PGDATA: /var/lib/postgresql/data/pgdata
            TZ: Europe/Istanbul
            PGTZ: Europe/Istanbul
        ports:
            - 5432:5432 
        healthcheck:
          test: ["CMD-SHELL", "pg_isready"]
          interval: 10s
          timeout: 5s
          retries: 3        
    spgadmin:
        container_name: c_pgadmin  
        image: dpage/pgadmin4:latest
        restart: always
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: youremail@outlook.com
            PGADMIN_DEFAULT_PASSWORD: root
            TZ: Europe/Istanbul
        volumes:
            - pgadmin-data:/var/lib/pgadmin

volumes:
    rabbitmq:
    pgadmin-data:
    